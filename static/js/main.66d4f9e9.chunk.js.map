{"version":3,"sources":["components/Home.js","components/Videos.js","components/Contact.js","App.js","components/Register.js","components/Login.js","serviceWorker.js","index.js","images/logo.png"],"names":["Home","Component","Videos","Contact","App","state","activeItem","handleItemClick","e","name","setState","this","Menu","pointing","secondary","Item","icon","active","onClick","position","Button","color","basic","style","to","Icon","Segment","Register","Grid","textAlign","verticalAlign","className","Column","maxWidth","Header","as","Image","src","logo","Form","size","stacked","Input","fluid","iconPosition","placeholder","type","Message","Login","onSubmit","handleSubmit","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.66d4f9e9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return <div>home</div>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Videos extends Component {\r\n  render() {\r\n    return <div>videos</div>;\r\n  }\r\n}\r\n\r\nexport default Videos;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Contact extends Component {\r\n  render() {\r\n    return <div>contact</div>;\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Segment, Button, Icon } from \"semantic-ui-react\";\nimport Home from \"./components/Home\";\nimport Videos from \"./components/Videos\";\nimport Contact from \"./components/Contact\";\n\nexport class App extends Component {\n  state = { activeItem: \"home\" };\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n  };\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <div>\n        <Menu pointing secondary>\n          <Menu.Item\n            icon=\"home\"\n            name=\"home\"\n            active={activeItem === \"home\"}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name=\"videos\"\n            icon=\"video play\"\n            active={activeItem === \"videos\"}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name=\"contact\"\n            icon=\"phone\"\n            active={activeItem === \"contact\"}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Menu position=\"right\">\n            <Menu.Item>\n              <Button color=\"green\" basic>\n                <Link style={{ color: \"green\" }} to=\"./components/login\">\n                  <Icon name=\"sign-in\" />\n                  Signin\n                </Link>\n              </Button>\n            </Menu.Item>\n            <Menu.Item>\n              <Button color=\"red\" basic icon>\n                <Icon name=\"sign-out\" />\n                Logout\n              </Button>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n\n        <Segment>\n          {activeItem === \"home\" ? <Home /> : null}\n          {activeItem === \"videos\" ? <Videos /> : null}\n          {activeItem === \"contact\" ? <Contact /> : null}\n        </Segment>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Message,\r\n  Image,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport logo from \"../images/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\n\r\nexport class Register extends Component {\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\r\n            <Image src={logo} color=\"orange\" className=\"reg__img\" />\r\n            Register Hostit\r\n          </Header>\r\n          <Form size=\"large\">\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                name=\"username\"\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                type=\"text\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"email\"\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email Address\"\r\n                type=\"email\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"passwordConfirmation\"\r\n                icon=\"repeat\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Confirm Password\"\r\n                type=\"password\"\r\n              />\r\n              <Button color=\"orange\" fluid size=\"large\">\r\n                Submit\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n\r\n          <Message>\r\n            Aldready a user?<Link to=\"./login\">Signin</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Message,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport \"./Register.css\";\r\nimport logo from \"../images/logo.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Login extends Component {\r\n  render() {\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\r\n            <img src={logo} className=\"reg__img\" />\r\n            Login to Hostit\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={this.handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                name=\"email\"\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email Address\"\r\n                type=\"email\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                name=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button color=\"violet\" fluid size=\"large\">\r\n                Submit\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            Not a user?<Link to=\"./Register\">Register here.</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/hostit-web/\" component={App} />\n      <Route path=\"/hostit-web/components/register\" component={Register} />\n      <Route path=\"/hostit-web/components/login\" component={Login} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4557364a.png\";"],"sourceRoot":""}